(self.webpackChunkbitform_documentation=self.webpackChunkbitform_documentation||[]).push([[6903],{4137:function(e,t,o){"use strict";o.d(t,{Zo:function(){return p},kt:function(){return u}});var n=o(7294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var l=n.createContext({}),d=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},p=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var o=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=d(o),u=a,h=c["".concat(l,".").concat(u)]||c[u]||m[u]||r;return o?n.createElement(h,i(i({ref:t},p),{},{components:o})):n.createElement(h,i({ref:t},p))}));function u(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=o.length,i=new Array(r);i[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var d=2;d<r;d++)i[d]=o[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}c.displayName="MDXCreateElement"},367:function(e,t,o){"use strict";o.d(t,{Z:function(){return a}});var n=o(7294);function a(e){var t=e.src,o=e.w,a=e.h,r=e.alt;return n.createElement("img",{className:"doc-img",loading:"lazy",src:"/img/"+t+".png",width:o,height:a,alt:r})}},6301:function(e,t,o){"use strict";o.d(t,{Z:function(){return a}});var n=o(7294);function a(e){var t=e.src,o=e.w,a=e.h;e.alt;return e.youtube?"undefined"!=typeof window?n.createElement("lite-youtube",{class:"youtube-vdo",videoid:t}):n.createElement(n.Fragment,null):n.createElement("video",{width:o,height:a,controls:!0},n.createElement("source",{src:"/video/"+t+".mp4",type:"video/mp4"}))}},2812:function(e,t,o){"use strict";o.r(t),o.d(t,{frontMatter:function(){return d},contentTitle:function(){return p},metadata:function(){return m},toc:function(){return c},default:function(){return h}});var n=o(2122),a=o(9756),r=(o(7294),o(4137)),i=o(367),s=o(6301),l=["components"],d={id:"pods",title:"Bit from Integration With Pods",sidebar_label:"Pods",slug:"/wpbitform-pods"},p=void 0,m={unversionedId:"Integrations/pods",id:"Integrations/pods",isDocsHomePage:!1,title:"Bit from Integration With Pods",description:"Pods is a content management framework that offers an intuitive alternative to WordPress and other content management systems for building sites. With its integration with the Form Builder plugin, it is easier than ever to create and publish forms in WordPress.",source:"@site/docs/Integrations/Pods.mdx",sourceDirName:"Integrations",slug:"/wpbitform-pods",permalink:"/docs/wpbitform-pods",editUrl:"https://github.com/Bit-Press/bitform-documentation/docs/Integrations/Pods.mdx",version:"current",frontMatter:{id:"pods",title:"Bit from Integration With Pods",sidebar_label:"Pods",slug:"/wpbitform-pods"},sidebar:"someSidebar",previous:{title:"Email Tempalate",permalink:"/docs/wpbitform- email-template"},next:{title:"Advanced Custom Fields(ACF)",permalink:"/docs/wpbitform-acf"}},c=[{value:"Create custom post type &amp; fields using Pods",id:"create-custom-post-type--fields-using-pods",children:[]},{value:"Create a form using Bit Form:",id:"create-a-form-using-bit-form",children:[]},{value:"Integration Settings:",id:"integration-settings",children:[]}],u={toc:c};function h(e){var t=e.components,o=(0,a.Z)(e,l);return(0,r.kt)("wrapper",(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Pods is a content management framework that offers an intuitive alternative to WordPress and other content management systems for building sites. With its integration with the Form Builder plugin, it is easier than ever to create and publish forms in WordPress."),(0,r.kt)("p",null,"Get more from your Pods admin by integrating it with our advanced form builder Bit Form. This Pods integration makes it possible to create custom post types & custom fields & let us collect data & manage those with Bit Form. The possibilities are endless, and we are sure that you will find this documentation useful."),(0,r.kt)("h2",{id:"create-custom-post-type--fields-using-pods"},"Create custom post type & fields using Pods"),(0,r.kt)("p",null,"Here, we will demonstrate an example of \u201d Car Registration \u201d to show how this integration will work for Bit Form. Follow the below instructions:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"For the Pods integration, make sure you have installed the Pods plugin successfully on your WordPress dashboard."),(0,r.kt)(i.Z,{src:"Pods-Integration/1. Pods Plugin",alt:"Pods",w:"1020",h:"400",mdxType:"Image"})),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Now navigate to Pods dashboard & click on the button \u201d Create New\u201d button."),(0,r.kt)(i.Z,{src:"Pods-Integration/2. Create new",alt:"Pods",w:"1020",h:"350",mdxType:"Image"})),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"On the \u2018 Content type \u2018 field, click on the drop-down menu & select \u201cCustom Post Type\u201c. Then set the \u201clabel\u201d  for singular & plural type as you want. For example, we have set the label as \u2018Car\u2018 & \u2018Cars\u2018 regarding singular & plural level. Then click on \u201cNext Step\u201d to proceed with further settings."),(0,r.kt)(i.Z,{src:"Pods-Integration/3. Create Post type",alt:"Pods",w:"1020",h:"350",mdxType:"Image"})),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"As we have created \u201cCar \u201d as a custom post type earlier, we will create some custom fields under the car type."))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"At first, we created a field & labeled it as \u201cBrand\u201c.Then set the field type as \u201cRelationship\u201c. We have set some brand names on the \u201cCustom defined option\u201d field as BMW, Toyota & Nissan. Make the option \u201cRequired\u201d. As we have set multiple brand names so from the \u201cAdditional field option\u201d we have selected the \u201cSelection Type = Single Select\u201d & \u201cFormat = Drop Down\u201c. Save the field settings by clicking \u201cSave field\u201c.   "),(0,r.kt)(i.Z,{src:"Pods-Integration/4. Field1",alt:"Pods",w:"1504",h:"400",mdxType:"Image"}),(0,r.kt)(i.Z,{src:"Pods-Integration/5. Field1.1",alt:"Pods",w:"1504",h:"400",mdxType:"Image"})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The second field we have created is labeled as \u201cPrice\u201d & set the field type as \u201cCurrency\u201d."),(0,r.kt)(i.Z,{src:"Pods-Integration/6. Field2",alt:"Pods",w:"1504",h:"400",mdxType:"Image"})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For the \u201cBody style\u201d field, we have set the field type as \u201cRelationship\u201d. Body styles are Sedans & Hatchbacks. From the \u201cAdditional field option\u201d we have selected the \u201cSelection Type = Multiple Select\u201d & \u201cFormat = Multi-Select\u201d."),(0,r.kt)(i.Z,{src:"Pods-Integration/7. Field3",alt:"Pods",w:"1504",h:"350",mdxType:"Image"}),(0,r.kt)(i.Z,{src:"Pods-Integration/8. Field3.1",alt:"Pods",w:"1504",h:"350",mdxType:"Image"})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The fourth field is \u201cWebsite Link\u201d & set the field type as \u201cWebsite\u201c. "),(0,r.kt)(i.Z,{src:"Pods-Integration/9. Field4",alt:"Pods",w:"1504",h:"300",mdxType:"Image"})),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The last field we have created is \u201cSpecification,\u201d & the field type is \u201d Plain Paragraph Text.\u201d"),(0,r.kt)(i.Z,{src:"Pods-Integration/10. Field5",alt:"Pods",w:"1504",h:"350",mdxType:"Image"}))),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"After creating the related field of the custom post type navigate to \u201cAdvanced Option\u201d & check the \u201cAuthor\u201d & \u201cFeatured Image\u201d from the \u201cSupport\u201d option."),(0,r.kt)(i.Z,{src:"Pods-Integration/Support",alt:"Pods",w:"1504",h:"350",mdxType:"Image"}),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Note: By checking the  \u201cFeatured Image,\u201d user can upload an image directly to the post type they have created"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Now, click on the \u201cSave Pod\u201d button to save all the Pods settings"),(0,r.kt)(i.Z,{src:"Pods-Integration/11. Save Pod",alt:"Pods",w:"1504",h:"350",mdxType:"Image"}))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Note: All the field settings you have to set are related to your custom post type. Here we have shown you some demo field settings")))),(0,r.kt)("h2",{id:"create-a-form-using-bit-form"},"Create a form using Bit Form:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"After the Pods field settings, navigate to Bit Form & click on \u201cCreate Form\u201c. Then select \u201cBlank form\u201c. "),(0,r.kt)(i.Z,{src:"Pods-Integration/12. Create Form",alt:"Pods",w:"1504",h:"300",mdxType:"Image"})),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"You have to drag & drop \u201cText\u201d , \u201cMultiline Text\u201d & \u201cImage\u201d  fields for the \u201cPost Type\u201d & \u201cPost Content\u201d & \u201cFeatured Image\u201c. These three fields are WordPress by default fields.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Here, we have created a form called \u201cCar Registration,\u201d where we have designed it with all the fields related to the custom post type \u201cCar\u201c."),(0,r.kt)(i.Z,{src:"Pods-Integration/13. Car registration form",alt:"Pods",w:"1504",h:"350",mdxType:"Image"})),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"After completing all the field settings, save the form."))),(0,r.kt)("h2",{id:"integration-settings"},"Integration Settings:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Follow the path: Settings => Integrations =>  Click on (+) => Click on \u2018Pods\u2019. Give a suitable name for the integration. "),(0,r.kt)(i.Z,{src:"Pods-Integration/14. Settings to integration",alt:"Pods",w:"1504",h:"350",mdxType:"Image"}),(0,r.kt)(i.Z,{src:"Pods-Integration/15. Select Pods",alt:"Pods",w:"1504",h:"350",mdxType:"Image"})),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Select the Pod type & post status. These two fields are compulsory for the integration settings. Then select the \u201cAuthor\u201d. "),(0,r.kt)(i.Z,{src:"Pods-Integration/16. Integration name",alt:"Pods",w:"1504",h:"300",mdxType:"Image"})),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Now, you have to map the form fields to the pods field on the \u201cPods Field Mapping\u201d section. Then map the WordPress default post field with the form fields from the \u201cWP Object Fields Mapping\u201c."),(0,r.kt)(i.Z,{src:"Pods-Integration/17. Map",alt:"Pods",w:"1504",h:"350",mdxType:"Image"})),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Save the complete integration setting."))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Note: Make sure Pods field type & Bit Form field type have to be same")))),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"After completing the settings, you have to set the conditions when this integration works. Don\u2019t forget to specify the integration name; otherwise, the integration will not work correctly. Here we have set the condition that \u2013 every time when records will be created/ edited, on form submission the integration will be triggered."),(0,r.kt)(i.Z,{src:"Pods-Integration/18. CL",alt:"Pods",w:"1504",h:"350",mdxType:"Image"})),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Now, whenever a user will submit the data it will be posted as content on the created custom post type option. Admin can edit those data if needed. Also, all the submitted data will be stored on the Form Responses page. Admin can view & manage those data."),(0,r.kt)(i.Z,{src:"Pods-Integration/19. Responses",alt:"Pods",w:"1504",h:"250",mdxType:"Image"}),(0,r.kt)(i.Z,{src:"Pods-Integration/20. Responses on post",alt:"Pods",w:"1504",h:"350",mdxType:"Image"}))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Watch the full video here!")),(0,r.kt)(s.Z,{youtube:!0,src:"81Uu2Rbmm0Y",mdxType:"Video"}))}h.isMDXComponent=!0}}]);