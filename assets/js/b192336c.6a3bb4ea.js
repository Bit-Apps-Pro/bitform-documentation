"use strict";(self.webpackChunkbitform_documentation=self.webpackChunkbitform_documentation||[]).push([[9893],{25157:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return d},contentTitle:function(){return s},metadata:function(){return m},assets:function(){return p},toc:function(){return c},default:function(){return h}});var o=a(87462),i=a(63366),n=(a(67294),a(3905)),r=a(56251),l=["components"],d={id:"razorpayfield",title:"Bit Form - Razorpay field",sidebar_label:"Razorpay field",slug:"/wpbitform-razorpayfield"},s=void 0,m={unversionedId:"Fields/razorpayfield",id:"Fields/razorpayfield",title:"Bit Form - Razorpay field",description:"Another payment gateway plugin Razorpay has been added to Bit Form. It allows credit cards, debit cards, net banking, wallet & UPI payments.",source:"@site/docs/Fields/Razorpay.mdx",sourceDirName:"Fields",slug:"/wpbitform-razorpayfield",permalink:"/wpbitform-razorpayfield",editUrl:"https://github.com/Bit-Apps-Pro/bitform-documentation/blob/main/docs/Fields/Razorpay.mdx",tags:[],version:"current",frontMatter:{id:"razorpayfield",title:"Bit Form - Razorpay field",sidebar_label:"Razorpay field",slug:"/wpbitform-razorpayfield"},sidebar:"someSidebar",previous:{title:"PayPal field",permalink:"/wpbitform-paypalfield"},next:{title:"Background Customize",permalink:"/wpbitform-background-customize"}},p={},c=[{value:"Field Customization",id:"field-customization",level:2},{value:"1.Amount Type :",id:"1amount-type-",level:3},{value:"2.Currency",id:"2currency",level:3},{value:"4.Description",id:"4description",level:3},{value:"Additional Settings",id:"additional-settings",level:2},{value:"1.Button Customization",id:"1button-customization",level:3},{value:"2. Theme Customization",id:"2-theme-customization",level:3},{value:"3. Modal",id:"3-modal",level:3},{value:"4.Prefill",id:"4prefill",level:3},{value:"5. Notes",id:"5-notes",level:3}],u={toc:c};function h(e){var t=e.components,a=(0,i.Z)(e,l);return(0,n.kt)("wrapper",(0,o.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Another payment gateway plugin ",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"Razorpay"))," has been added to Bit Form. It allows ",(0,n.kt)("inlineCode",{parentName:"p"},"credit cards"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"debit cards"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"net banking"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"wallet")," & ",(0,n.kt)("inlineCode",{parentName:"p"},"UPI payments"),"."),(0,n.kt)("p",null,"The below instructions admins have to follow to set up their Razorpay account with Bit Form."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"API Key & API Secret :"),"\nTo integret admin Razorpay account with Bit Form, admin have to go to the dashboard of their account. Then admin has to set their specified key & secret respectively to the fields ' API Key' and 'API Secret'. Now, you are ready to take payment from use via Razorpay.\n",(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"Dashboard=> Settings=> API keys tab=> Key ID & Secret"))),(0,n.kt)(r.Z,{src:"razorpay/1. api keys from razorpay dashboard",alt:"Form-Field",w:"1900",h:"350",mdxType:"Image"}),(0,n.kt)(r.Z,{src:"razorpay/3. app settings",alt:"Form-Field",w:"1900",h:"350",mdxType:"Image"}),(0,n.kt)(r.Z,{src:"razorpay/4. payments",alt:"Form-Field",w:"1900",h:"350",mdxType:"Image"}),(0,n.kt)(r.Z,{src:"razorpay/5. razorpay",alt:"Form-Field",w:"1900",h:"350",mdxType:"Image"}),(0,n.kt)(r.Z,{src:"razorpay/6. razorpay config",alt:"Form-Field",w:"1900",h:"350",mdxType:"Image"}),(0,n.kt)("h2",{id:"field-customization"},"Field Customization"),(0,n.kt)("h3",{id:"1amount-type-"},"1.Amount Type :"),(0,n.kt)("p",null,"Admin can fix that in which way they want to take payments from users."),(0,n.kt)(r.Z,{src:"razorpay/8. amount type",alt:"Form-Field",w:"1000",h:"350",mdxType:"Image"}),(0,n.kt)("p",null,"\u2714Fixed: If admin want to set a limit of payment, they have to choose this option. As example, you have created a form for a particular sale. Then you have to set the payment digit on the field."),(0,n.kt)("p",null,"\u2714Dynamic: For dynamic payment admins have to add a 'number / radio field' where users can add their amount according to their willing.      "),(0,n.kt)("h3",{id:"2currency"},"2.Currency"),(0,n.kt)("p",null,"You can set 26+ currency types. The currency is set to INR by default. you can change by your own preference."),(0,n.kt)(r.Z,{src:"razorpay/9. currency",alt:"Form-Field",w:"1900",h:"350",mdxType:"Image"}),"### 3.Account Name Admin have to set the account name through which all payments should be received. That specific account name will be shown on the top of the payment checkout bar.",(0,n.kt)(r.Z,{src:"razorpay/10. account name description",alt:"Form-Field",w:"1900",h:"350",mdxType:"Image"}),(0,n.kt)("h3",{id:"4description"},"4.Description"),(0,n.kt)("p",null,"Admin can set additional payment description. Users can see this description while giving their payments on the Razorpay window."),(0,n.kt)("h2",{id:"additional-settings"},"Additional Settings"),(0,n.kt)("h3",{id:"1button-customization"},"1.Button Customization"),(0,n.kt)(r.Z,{src:"razorpay/12. button settings",alt:"Form-Field",w:"1900",h:"350",mdxType:"Image"}),"On button settings option there are four fields :",(0,n.kt)("p",null,"Button Text: Admins can change the Razorpay button text according to their choice.\nButton Allignment: Left, Right & center alignments are available.\nFull width button & Small button: Users have to toggle these buttons to use the features."),(0,n.kt)("h3",{id:"2-theme-customization"},"2. Theme Customization"),(0,n.kt)("p",null,"When user processes the payment method there will show a Razorpay checkout window. This window's color & theme can be customizable by admin."),(0,n.kt)(r.Z,{src:"razorpay/13. theme settings",alt:"Form-Field",w:"1900",h:"350",mdxType:"Image"}),(0,n.kt)("h3",{id:"3-modal"},"3. Modal"),(0,n.kt)("p",null,"When the modal option 'confirmed on close' is enabled then user will get an option if they want to close the Razorpay window. "),(0,n.kt)(r.Z,{src:"razorpay/14. modal settings",alt:"Form-Field",w:"1900",h:"350",mdxType:"Image"}),(0,n.kt)("h3",{id:"4prefill"},"4.Prefill"),(0,n.kt)("p",null,"By default, the users has to fill the Razorpay checkout information like name, email & contact again. If admins want they can map the field names of form on the customization prefill fields - 'Name', 'Email', 'Contact'. By this user don't have to put mapped fields information double time on Razorpay checkout window. "),(0,n.kt)(r.Z,{src:"razorpay/15. prefill settings",alt:"Form-Field",w:"1900",h:"350",mdxType:"Image"}),(0,n.kt)("h3",{id:"5-notes"},"5. Notes"),(0,n.kt)("p",null,"Admin can send additional information by setting values with their corresponding key. This notes will be shown on their Razorpay account. They can view these notes from their Razorpay account. Admin can send maximum of 15 key-value paired values."),(0,n.kt)(r.Z,{src:"razorpay/16. notes settings",alt:"Form-Field",w:"1900",h:"350",mdxType:"Image"}))}h.isMDXComponent=!0}}]);