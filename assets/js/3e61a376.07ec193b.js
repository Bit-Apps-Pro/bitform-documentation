(self.webpackChunkbitform_documentation=self.webpackChunkbitform_documentation||[]).push([[875],{73192:function(t,e,o){"use strict";o.r(e),o.d(e,{frontMatter:function(){return m},contentTitle:function(){return p},metadata:function(){return d},toc:function(){return u},default:function(){return g}});var a=o(22122),r=o(19756),i=(o(67294),o(3905)),n=o(95838),s=o(76301),l=["components"],m={id:"acf",title:"Bit Form Integration With ACF",sidebar_label:"Advanced Custom Fields(ACF)",slug:"/wpbitform-acf"},p=void 0,d={unversionedId:"Integrations/acf",id:"Integrations/acf",isDocsHomePage:!1,title:"Bit Form Integration With ACF",description:"_ACF Integration_ allows you to easily add advance custom fields to your website & integrate them with Bit Form fields. This ACF integration makes it possible to create custom post types & custom fields & let us collect data & manage those with Bit Form. Using a simple ACF setup you can now create any post via Bit Form submission.This integrations makes it convenient for the admin panel to visualize large amount of data more preciously. The possibilities are endless, and we are sure that you will find this documentation useful.",source:"@site/docs/Integrations/ACF.mdx",sourceDirName:"Integrations",slug:"/wpbitform-acf",permalink:"/wpbitform-acf",editUrl:"https://github.com/Bit-Press/bitform-documentation/blob/main/docs/Integrations/ACF.mdx",version:"current",frontMatter:{id:"acf",title:"Bit Form Integration With ACF",sidebar_label:"Advanced Custom Fields(ACF)",slug:"/wpbitform-acf"},sidebar:"someSidebar",previous:{title:"Pods",permalink:"/wpbitform-pods"},next:{title:"Meta Box",permalink:"/wpbitform-metabox"}},u=[{value:"Create custom post type &amp; fields using ACF plugin :",id:"create-custom-post-type--fields-using-acf-plugin-",children:[]},{value:"Create a form using Bit Form:",id:"create-a-form-using-bit-form",children:[]},{value:"Integration Settings:",id:"integration-settings",children:[]}],c={toc:u};function g(t){var e=t.components,o=(0,r.Z)(t,l);return(0,i.kt)("wrapper",(0,a.Z)({},c,o,{components:e,mdxType:"MDXLayout"}),(0,i.kt)(s.Z,{youtube:!0,src:"zu0zB4OgE20",mdxType:"Video"}),(0,i.kt)("br",null),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"ACF Integration"))," allows you to easily add advance custom fields to your website & integrate them with Bit Form fields. This ACF integration makes it possible to create custom post types & custom fields & let us collect data & manage those with Bit Form. Using a simple ACF setup you can now create any post via Bit Form submission.This integrations makes it convenient for the admin panel to visualize large amount of data more preciously. The possibilities are endless, and we are sure that you will find this documentation useful."),(0,i.kt)("h2",{id:"create-custom-post-type--fields-using-acf-plugin-"},"Create custom post type & fields using ACF plugin :"),(0,i.kt)("p",null,"Here, we will demonstrate an example of ",(0,i.kt)("strong",{parentName:"p"},"Photo Album")," to show how you can integrate custom advanced fields with Bit Form fields. Follow the below instructions:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"For the ACF integration, make sure you have installed the ACF plugin successfully on your WordPress dashboard.")),(0,i.kt)(n.Z,{src:"ACF/1. ACF-plugin-Bit-Form",alt:"Pods",w:"1020",h:"400",mdxType:"Image"}),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Create a post type according to your preference. Here we have already created a type ",(0,i.kt)("strong",{parentName:"li"},"Photo Albums"),". Also created categories- ",(0,i.kt)("strong",{parentName:"li"},"Travel")," & ",(0,i.kt)("strong",{parentName:"li"},"Festival"))),(0,i.kt)(n.Z,{src:"ACF/2. Post-Type-Bit-Form",alt:"Pods",w:"1020",h:"350",mdxType:"Image"}),(0,i.kt)(n.Z,{src:"ACF/3.Taxonomy-Bit-Form",alt:"Pods",w:"1020",h:"250",mdxType:"Image"}),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"As we have created ",(0,i.kt)("strong",{parentName:"li"},"Photo Albums")," as a custom post type earlier, we will create some custom fields under the type."),(0,i.kt)("li",{parentName:"ol"},"Navigate to the ",(0,i.kt)("strong",{parentName:"li"},"Custom Fields")," & click on ",(0,i.kt)("strong",{parentName:"li"},"Add New")," to create a field group under your post type. Then set a name for the field group. Here we have created a new field group called ",(0,i.kt)("strong",{parentName:"li"},"Photo Album"),".")),(0,i.kt)(n.Z,{src:"ACF/4.New-Field-Group-Bit-Form",alt:"Pods",w:"1886",h:"200",mdxType:"Image"}),(0,i.kt)("ol",{start:5},(0,i.kt)("li",{parentName:"ol"},"Create your required fields from the option ",(0,i.kt)("strong",{parentName:"li"},"Add Fields"),". Give the necessary credentials like - ",(0,i.kt)("strong",{parentName:"li"},"Field label"),", ",(0,i.kt)("strong",{parentName:"li"},"Field Name"),", ",(0,i.kt)("strong",{parentName:"li"},"Field Type")," etc, basically which are required for your use case.")),(0,i.kt)(n.Z,{src:"ACF/5.Add-Fields-Bit-Form",alt:"Pods",w:"1886",h:"300",mdxType:"Image"}),(0,i.kt)("ol",{start:6},(0,i.kt)("li",{parentName:"ol"},"For the demonstration purpose, we have creates three fields - ",(0,i.kt)("strong",{parentName:"li"},"Event location"),", ",(0,i.kt)("strong",{parentName:"li"},"Gallery")," & ",(0,i.kt)("strong",{parentName:"li"},"Event Date"),".")),(0,i.kt)(n.Z,{src:"ACF/8.Fields-Bit-Form",alt:"Pods",w:"1886",h:"350",mdxType:"Image"}),(0,i.kt)(n.Z,{src:"ACF/6.Rules-For-Post-Type-Bit-Form",alt:"Pods",w:"1886",h:"350",mdxType:"Image"}),(0,i.kt)("ol",{start:7},(0,i.kt)("li",{parentName:"ol"},"Now, click on ",(0,i.kt)("strong",{parentName:"li"},"Publish/Update")," to save the fields settings.")),(0,i.kt)(n.Z,{src:"ACF/7.Publish-Bit-Form",alt:"Pods",w:"1886",h:"350",mdxType:"Image"}),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Note: All the field settings you have to set are related to your custom post type. Here we have shown you some demo field settings")))),(0,i.kt)("h2",{id:"create-a-form-using-bit-form"},"Create a form using Bit Form:"),(0,i.kt)("p",null,"It's time to create a form using Bit Form where you have to integrate the ACF fields created in the earlier steps."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"After the ACF settings, navigate to Bit Form & click on ",(0,i.kt)("strong",{parentName:"li"},"Create Form"),". Then select ",(0,i.kt)("strong",{parentName:"li"},"Blank form"),"."),(0,i.kt)("li",{parentName:"ol"},"Drag & Drop a text field & name it as ",(0,i.kt)("strong",{parentName:"li"},"Post Title"),". Then select the other fields from the toolbar related to the custom fields you have created on ACF & set the fields settings similar to ACF settings. Here we have taken three fields - Drop-down field, File upload field & Text field & named those as ",(0,i.kt)("strong",{parentName:"li"},"Event Location"),", ",(0,i.kt)("strong",{parentName:"li"},"Gallery"),", & ",(0,i.kt)("strong",{parentName:"li"},"Event Date"),".")),(0,i.kt)(n.Z,{src:"ACF/9. Bit-Form",alt:"Pods",w:"1886",h:"350",mdxType:"Image"}),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},'Note: When you import any tag using the drop-down menu you can enable the option "Use Post Taxonomy Fields". This option will automatically tag the post from the form fields')))),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"After completing all the field settings, save the form.")),(0,i.kt)("h2",{id:"integration-settings"},"Integration Settings:"),(0,i.kt)("p",null,"After finishing the for creation part , move to the integration part where you have to map ACF fields with Bit Form fields to create a post via form submission."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Follow the path: ",(0,i.kt)("strong",{parentName:"li"},"Settings => Integrations => Click on (+) => Click on ACF"),".")),(0,i.kt)(n.Z,{src:"ACF/10. Setings-to-integration-Bit-Form",alt:"Pods",w:"1886",h:"350",mdxType:"Image"}),(0,i.kt)(n.Z,{src:"ACF/11. Select-ACF-Bit-Form",alt:"Pods",w:"1886",h:"300",mdxType:"Image"}),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"After navigate to the integration page, select the ",(0,i.kt)("strong",{parentName:"li"},"Post Type")," you have created for the integration. For example we have selected ",(0,i.kt)("strong",{parentName:"li"},"Photo Album")," as post type.")),(0,i.kt)(n.Z,{src:"ACF/12.Select-post-type-Bit-Form",alt:"Pods",w:"1886",h:"300",mdxType:"Image"}),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"Now , select ",(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("em",{parentName:"strong"},"Post Status")),", ",(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("em",{parentName:"strong"},"Author"))," & ",(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("em",{parentName:"strong"},"Comment Status"))," according to the requirement.")),(0,i.kt)(n.Z,{src:"ACF/13.others-Bit-Form",alt:"Pods",w:"1886",h:"300",mdxType:"Image"}),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},"For the field mapping option you have to configure three types of mapping -")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"At first map the form fields with the general/default post fields."),(0,i.kt)("li",{parentName:"ul"},'Then map the form fields with the related "ACF fields".',(0,i.kt)("blockquote",{parentName:"li"},(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Note: Right now, Bit Form doesn't support all the ACF fields"))))),(0,i.kt)("li",{parentName:"ul"},"Lastly map the file upload field.")),(0,i.kt)(n.Z,{src:"ACF/14.Map-Bit-Form",alt:"Pods",w:"1886",h:"300",mdxType:"Image"}),(0,i.kt)("ol",{start:5},(0,i.kt)("li",{parentName:"ol"},"Save all the integration settings")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Note: Make sure ACF field type & Bit Form field type have to be same")))),(0,i.kt)(n.Z,{src:"ACF/15.Save-Bit-Form",alt:"Pods",w:"1886",h:"300",mdxType:"Image"}),(0,i.kt)(n.Z,{src:"ACF/16. Created-Integration-Bit-Form",alt:"Pods",w:"1886",h:"300",mdxType:"Image"}),(0,i.kt)("ol",{start:6},(0,i.kt)("li",{parentName:"ol"},"After completing the settings, you have to set the conditions when this integration works. Don't forget to specify the integration name; otherwise, the integration will not work correctly. Here we have set the condition that - every time when records are created/ edited, on form submission the integration will be triggered. At last click on ",(0,i.kt)("strong",{parentName:"li"},"Update")," button.")),(0,i.kt)(n.Z,{src:"ACF/CL-Bit-Form",alt:"Pods",w:"1886",h:"400",mdxType:"Image"}),(0,i.kt)("ol",{start:7},(0,i.kt)("li",{parentName:"ol"},"Now, whenever a user will submit the data it will be posted as content on the created custom post type option. Admin can edit those data if needed. Also all the submitted data will be stored on the Form Responses page. Admin can view & manage those data.")),(0,i.kt)(n.Z,{src:"ACF/17.Input-Bit-Form",alt:"Pods",w:"1886",h:"450",mdxType:"Image"}),(0,i.kt)(n.Z,{src:"ACF/18.New-Post-Bit-Form",alt:"Pods",w:"1886",h:"300",mdxType:"Image"}),(0,i.kt)(n.Z,{src:"ACF/19. Response-Bit-Form",alt:"Pods",w:"1886",h:"350",mdxType:"Image"}),(0,i.kt)(n.Z,{src:"ACF/20.Edit-Post-Bit-Form",alt:"Pods",w:"1886",h:"300",mdxType:"Image"}))}g.isMDXComponent=!0}}]);