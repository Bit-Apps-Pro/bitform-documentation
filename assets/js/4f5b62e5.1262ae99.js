(self.webpackChunkbitform_documentation=self.webpackChunkbitform_documentation||[]).push([[5230],{4137:function(e,t,r){"use strict";r.d(t,{Zo:function(){return u},kt:function(){return c}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=p(r),c=o,m=d["".concat(s,".").concat(c)]||d[c]||f[c]||i;return r?n.createElement(m,l(l({ref:t},u),{},{components:r})):n.createElement(m,l({ref:t},u))}));function c(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,l=new Array(i);l[0]=d;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:o,l[1]=a;for(var p=2;p<i;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5757:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return a},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return d}});var n=r(2122),o=r(9756),i=(r(7294),r(4137)),l=["components"],a={id:"fields-overview",title:"Bit form-Field Types",sidebar_label:"Overview",slug:"/wpbitform-field-types"},s=void 0,p={unversionedId:"Fields/fields-overview",id:"Fields/fields-overview",isDocsHomePage:!1,title:"Bit form-Field Types",description:"The field types of form builder are a form of user interface components that are used to create a form within a web page or an application. Field types are available by default in the form builder. The field types are available when you create a new form by choosing the Form builder option. There are many field types that can be used to create different types of online forms. The most popular types are the ones for user input, like text fields, checkboxes, radio buttons and select lists.",source:"@site/docs/Fields/Overview.mdx",sourceDirName:"Fields",slug:"/wpbitform-field-types",permalink:"/docs/wpbitform-field-types",editUrl:"https://github.com/Bit-Press/bitform-documentation/docs/Fields/Overview.mdx",version:"current",frontMatter:{id:"fields-overview",title:"Bit form-Field Types",sidebar_label:"Overview",slug:"/wpbitform-field-types"},sidebar:"someSidebar",previous:{title:"Create First Form",permalink:"/docs/How-to-create-a-WordPress-from-using-BitForm"},next:{title:"Text field",permalink:"/docs/wpbitform-textfield"}},u=[{value:"Types of form fields",id:"types-of-form-fields",children:[]}],f={toc:u};function d(e){var t=e.components,r=(0,o.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"The field types of form builder")," are a form of user interface components that are used to create a form within a web page or an application. Field types are available by default in the form builder. The field types are available when you create a new form by choosing the Form builder option. There are many field types that can be used to create different types of online forms. The most popular types are the ones for user input, like text fields, checkboxes, radio buttons and select lists."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Bit Form comes")," with ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"20+ drag & drop"))," basic to advanced level form fields. These fields will help you to create normal contact form to multipurpose form. In this section you will find how to use the fields to build an online form."),(0,i.kt)("h2",{id:"types-of-form-fields"},"Types of form fields"),(0,i.kt)("p",null,"\u2714 Text Field"),(0,i.kt)("p",null,"\u2714 Multiline Text Field"),(0,i.kt)("p",null,"\u2714 Checkbox Field"),(0,i.kt)("p",null,"\u2714 Radio Button Field"),(0,i.kt)("p",null,"\u2714 Number Field"),(0,i.kt)("p",null,"\u2714 Drop-Down Field"),(0,i.kt)("p",null,"\u2714 Country Field"),(0,i.kt)("p",null,"\u2714 Password Field"),(0,i.kt)("p",null,"\u2714 Email Field"),(0,i.kt)("p",null,"\u2714 URL Field"),(0,i.kt)("p",null,"\u2714 File Upload Field"),(0,i.kt)("p",null,"\u2714 Date Field"),(0,i.kt)("p",null,"\u2714 Time Field"),(0,i.kt)("p",null,"\u2714 Date-Time Field"),(0,i.kt)("p",null,"\u2714 Month Field"),(0,i.kt)("p",null,"\u2714 Week Field"),(0,i.kt)("p",null,"\u2714 Color Picker Field"),(0,i.kt)("p",null,"\u2714 Google reCAPTCHA Field"),(0,i.kt)("p",null,"\u2714 Decision Box Field"),(0,i.kt)("p",null,"\u2714 HTML Field"),(0,i.kt)("p",null,"\u2714 Button Field"),(0,i.kt)("p",null,"\u2714 PayPal Field"),(0,i.kt)("p",null,"\u2714 Razorpay Field"))}d.isMDXComponent=!0}}]);