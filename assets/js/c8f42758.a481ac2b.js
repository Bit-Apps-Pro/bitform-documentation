(self.webpackChunkbitform_documentation=self.webpackChunkbitform_documentation||[]).push([[3412],{4137:function(e,t,r){"use strict";r.d(t,{Zo:function(){return d},kt:function(){return p}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),f=s(r),p=i,c=f["".concat(u,".").concat(p)]||f[p]||m[p]||o;return r?n.createElement(c,a(a({ref:t},d),{},{components:r})):n.createElement(c,a({ref:t},d))}));function p(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=f;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},367:function(e,t,r){"use strict";r.d(t,{Z:function(){return i}});var n=r(7294);function i(e){var t=e.src,r=e.w,i=e.h,o=e.alt;return n.createElement("img",{className:"doc-img",loading:"lazy",src:"/img/"+t+".png",width:r,height:i,alt:o})}},9617:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return u},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return m},default:function(){return p}});var n=r(2122),i=r(9756),o=(r(7294),r(4137)),a=r(367),l=["components"],u={id:"numberfield",title:"Bit from - Number field",sidebar_label:"Number field",slug:"/wpbitform-numberfield"},s=void 0,d={unversionedId:"Fields/numberfield",id:"Fields/numberfield",isDocsHomePage:!1,title:"Bit from - Number field",description:"Number field is one of the most commonly used types of field available in form builder, and its main purpose is to allow the user to enter an integer/numerical value in the field. Number fields are used to capture numbers like quantity, price, number of hours etc. It is a mandatory field in any form.",source:"@site/docs/Fields/Numberfield.mdx",sourceDirName:"Fields",slug:"/wpbitform-numberfield",permalink:"/docs/wpbitform-numberfield",editUrl:"https://github.com/Bit-Press/bitform-documentation/docs/Fields/Numberfield.mdx",version:"current",frontMatter:{id:"numberfield",title:"Bit from - Number field",sidebar_label:"Number field",slug:"/wpbitform-numberfield"},sidebar:"someSidebar",previous:{title:"Radio Button field",permalink:"/docs/wpbitform-radiobuttonfield"},next:{title:"Drop-Down field",permalink:"/docs/wpbitform-drop-downfield"}},m=[{value:"\u2699 General Settings :",id:"-general-settings-",children:[{value:"1.Field Key",id:"1field-key",children:[]},{value:"2.Field Label",id:"2field-label",children:[]},{value:"3.Admin Label",id:"3admin-label",children:[]},{value:"4.Required",id:"4required",children:[]},{value:"5.Autofill",id:"5autofill",children:[]},{value:"6.Placeholder",id:"6placeholder",children:[]},{value:"7.Min-Max",id:"7min-max",children:[]},{value:"7.Pattern",id:"7pattern",children:[]}]}],f={toc:m};function p(e){var t=e.components,r=(0,i.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"Number field"))," is one of the most commonly used types of field available in form builder, and its main purpose is to allow the user to enter an integer/numerical value in the field. Number fields are used to capture numbers like quantity, price, number of hours etc. It is a mandatory field in any form."),(0,o.kt)("h2",{id:"-general-settings-"},"\u2699 General Settings :"),(0,o.kt)("h3",{id:"1field-key"},"1.Field Key"),(0,o.kt)("p",null,"The Field Key is unique for all fields. ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"bf4-1"))," an example of field key. bf means ",(0,o.kt)("strong",{parentName:"p"},"bit form")," , 4 represent ",(0,o.kt)("strong",{parentName:"p"},"form id")," , 1 represent ",(0,o.kt)("strong",{parentName:"p"},"1st field")," of the form . These keys are used in ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"Success/Error Messages, Web Hooks, Redirect Page, Email Templates, Workflow & Integrations."))),(0,o.kt)("h3",{id:"2field-label"},"2.Field Label"),(0,o.kt)("p",null,"You can set a proper name of the field that is considered as a field label. This label name will appear on the front end of the form you will display. If you want you can hide the field label from the form ."),(0,o.kt)("h3",{id:"3admin-label"},"3.Admin Label"),(0,o.kt)("p",null,"This field is used for ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"Administration purposes")),". Admin can set a label to specify the label name on the responses page."),(0,o.kt)("h3",{id:"4required"},"4.Required"),(0,o.kt)("p",null,"By enabling this option, you can make the field required for the user if you need it. Also you can set an ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"Error message"))," if you want the field required. Also you can set message as your requirements."),(0,o.kt)("h3",{id:"5autofill"},"5.Autofill"),(0,o.kt)("p",null,"To suggest auto field value from the browser, you need to enable the AutoFill property."),(0,o.kt)("h3",{id:"6placeholder"},"6.Placeholder"),(0,o.kt)("p",null,"A Placeholder is a property by which user can understand the usage of the field. Any text entered on the placeholder will be displayed on the fields. When the user starts writing on the field, the placeholder text will disappear."),(0,o.kt)(a.Z,{src:"Field-Types/NumberField-Bit-Form",alt:"Form-Field",w:"1900",h:"300",mdxType:"Image"}),(0,o.kt)("h3",{id:"7min-max"},"7.Min-Max"),(0,o.kt)("p",null,"You have to set the boundary of minimum & maximum number. Users can only input numbers between that boundary.  Also you can set an ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"Error message"))," if a user exceeds the number limit. Also you can set message as your requirements.  "),(0,o.kt)("h3",{id:"7pattern"},"7.Pattern"),(0,o.kt)("p",null,"You can set the pattern of the input of the field & also can set a custom regex pattern on the flag option."),(0,o.kt)(a.Z,{src:"Field-Types/Numberfield-Bit-Form2",alt:"Form-Field",w:"1900",h:"300",mdxType:"Image"}))}p.isMDXComponent=!0}}]);